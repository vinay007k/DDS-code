#include <iostream>
using namespace std;
struct node{
    int data;
    node*left;
    node*right;
    node(int val){
        data=val;
        left=right=nullptr;
    }
};
void inorder(node*root){
    if(root){
        inorder (root->left);
        cout<<root->data<<" ";
        inorder(root->right);
    }
}
 node*insert(node*root,int val){
     if(root==nullptr){
         return new node(val);
     }
     else if(val<root->data){
         root->left=insert(root->left,val);
     }
     else if(val>root->data){
         root->right=insert(root->right,val);
     }
     return root;
 }
 int search(node*root,int val){
     if(val==root->data){
         return 1;
     }
     else if (val<root->data){
         return search(root->left,val);
     }
     else if (val>root->data){
         return search (root->right,val);
     }
     return 0;
 }
int main(){
    int n;
    cout<<"Enter the no of nodes: ";
    cin>>n;
    int*arr=new int[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    node*root=nullptr;
    for(int i=0;i<n;i++){
        root=insert(root,arr[i]);
    }
    cout<<endl;
  int ans= search (root,11);
  if(ans==1){
      cout<<"found"<<endl;
  }
  else{
      cout<<"not found";
  }
}
